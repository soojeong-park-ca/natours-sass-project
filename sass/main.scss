// VARIABLES
$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;

$color-grey-dark: #777;
$color-white: #fff;

/* RESET */
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

body {
  box-sizing: border-box;

  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 1rem;
  line-height: 1.7;
  color: $color-grey-dark;

  /* padding: 30px; */
  padding: 1.875em;
  /* ems can be useful if I want to define certain properties of an element (like padding) relative to its own font size */
}

.header {
  position: relative;
  height: 95vh;

  background-image: linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url(../img/hero.jpg);
  background-size: cover;
  background-position: top;

  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.header__logo-box {
  position: absolute;
  top: 40px;
  left: 40px;

  height: 2.2rem;
}

.header__logo {
  height: 100%;
}

.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: $color-white;
  text-transform: uppercase;
  backface-visibility: hidden;

  margin-bottom: 60px;
}

.heading-primary--main {
  display: block;
  font-size: 3.75rem;
  font-weight: 400;
  letter-spacing: 35px;
  padding-left: 35px;

  animation: moveInFromLeft 1s ease-out;
}

.heading-primary--sub {
  display: block;
  font-size: 1.25rem;
  font-weight: 700;
  letter-spacing: 17.4px;
  padding-left: 17.4px;

  animation: moveInFromRight 1s ease-out;
}

.btn:link,
.btn:visited {
  display: inline-block;
  position: relative;

  text-decoration: none;
  text-transform: uppercase;
  border-radius: 100px;
  transition: all 0.2s;

  padding: 14px 40px;
}
.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}
.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn--white {
  background: $color-white;
  color: $color-grey-dark;
}

.btn--animated {
  animation: moveInFromBottom 0.5s ease-out 0.75s;
  animation-fill-mode: backwards;
}

.btn::after {
  content: "";
  display: inline-block;
  position: absolute;

  width: 100%;
  height: 100%;
  border-radius: 100px;
  top: 0;
  left: 0;
  transition: all 0.4s;

  z-index: -1;
}
.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn--white::after {
  background-color: $color-white;
}

/*****************************************/
/* ANIMATIONS */
@keyframes moveInFromLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }

  80% {
    transform: translateX(10px);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInFromRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  80% {
    transform: translateX(-10px);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInFromBottom {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
